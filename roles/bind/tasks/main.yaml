---
- name: Gather facts
  ansible.builtin.setup:

- name: Install bind9
  ansible.builtin.apt:
    name: 
      - bind9
      - python3-dnspython
    state: present

- name: Configure DNS forwarders
  ansible.builtin.template:
    src: named.conf.options.j2
    dest: /etc/bind/named.conf.options
  notify: 
    - Restart Bind9 Service
    - Reload rncd
  no_log: yes

# refactor - merge into same block
- name: Configure DNS Master Zone
  ansible.builtin.template:
    src: db.lockbox.sec.j2
    dest: /var/cache/bind/db.{{ domain_name }}
    force: no
  notify: 
    - Restart Bind9 Service
    - Reload rncd

- name: Configure DNS Rev Zone
  ansible.builtin.template:
    src: db.lockbox.sec.rev.j2
    dest: /var/cache/bind/db.{{ domain_name }}.rev
    force: no
  notify: 
    - Restart Bind9 Service
    - Reload rncd

- name: Ensure bind9 service is started and enabled
  ansible.builtin.systemd:
    name: bind9
    state: started
    enabled: true

- name: Download Bind9 exporter archive
  ansible.builtin.get_url:
    url: "https://github.com/prometheus-community/bind_exporter/releases/download/v0.7.0/bind_exporter-0.7.0.linux-amd64.tar.gz"
    dest: /opt/bind_exporter-0.7.0.linux-amd64.tar.gz

- name: Extract Bind9 exporter archive
  ansible.builtin.unarchive:
    src: /opt/bind_exporter-0.7.0.linux-amd64.tar.gz
    dest: /opt
    remote_src: yes
    creates: /opt/bind_exporter-0.7.0.linux-amd64/bind_exporter

- name: Create symbolic link to prometheus-bind-exporter
  ansible.builtin.file:
    src: /opt/bind_exporter-0.7.0.linux-amd64/bind_exporter
    dest: /usr/local/bin/bind_exporter
    state: link

- name: Create systemd service definition
  ansible.builtin.template:
    src: bind_exporter.service.j2
    dest: /etc/systemd/system/prometheus-bind-exporter.service
  notify: Reload systemd

- name: Ensure bind exporter service is started and enabled
  ansible.builtin.systemd:
    name: prometheus-bind-exporter
    state: started
    enabled: true

- name: Add A Records
  community.general.nsupdate:
    key_name: "update-key"
    key_secret: "{{ dns_update_key }}"
    key_algorithm: "hmac-sha256"
    type: "A"
    server: "{{ ansible_default_ipv4['address'] }}"
    zone: "{{ domain_name }}."
    record: "{{ item.key }}.{{ domain_name }}."
    value: "{{ item.value }}"
  when: inventory_hostname == groups['dns_primary'][0]
  loop: "{{ a_records | dict2items }}"
  no_log: no
