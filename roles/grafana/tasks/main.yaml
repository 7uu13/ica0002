---
- name: Create Grafana directory
  ansible.builtin.file:
    path: "/opt/grafana/provisioning/{{ item }}"
    state: directory
  loop:
    - dashboards
    - datasources

- name: Add grafana.ini
  ansible.builtin.template:
    src: grafana.ini.j2
    dest: /opt/grafana/grafana.ini
  notify: 
    - Restart Grafana Container
  no_log: yes

- name: Add default dashboard and datasources
  ansible.builtin.template:
    src: "{{ item }}.yaml.j2"
    dest: "/opt/grafana/provisioning/{{ item }}/default.yaml"
  loop:
    - datasources
    - dashboards
  notify: Restart Grafana Container

- name: Add dashboards
  ansible.builtin.copy:
    src: "{{ item }}.json"
    dest: "/opt/grafana/provisioning/dashboards/{{ item }}.json"
  loop:
    - main
    - backups
    - mysql
    - syslog
  notify: Restart Grafana Container

- name: Create Grafana Container
  community.docker.docker_container:
    name: grafana
    image: grafana/grafana
    volumes: /opt/grafana:/etc/grafana
    published_ports: "{{ grafana_port }}:3000"
  
- name: Add CNAME Record for grafana
  community.general.nsupdate:
    key_name: "update-key"
    key_secret: "{{ dns_update_key }}"
    key_algorithm: "hmac-sha256"
    type: "CNAME"
    server: "192.168.43.40" #"{{ hostvars['7uu13-2']['ansible_default_ipv4']['address'] }}" 
    zone: "{{ domain_name }}."
    record: "grafana"
    value: "{{ groups['dns_secondary'][0] }}" 
  #when: inventory_hostname == groups['dns_primary'][0]
  no_log: no