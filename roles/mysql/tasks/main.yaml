---
- name: Install MySql
  ansible.builtin.apt:
    name:
      - mysql-server
      - python3-pymysql
    state: present

- name: Override Default Bind-Addr
  ansible.builtin.template:
    src: override.cnf.j2
    dest: /etc/mysql/mysql.conf.d/override.cnf
  notify: Restart MySql service

- name: Create a new database with name 'agama'
  community.mysql.mysql_db:
    name: "{{ mysql_database }}"
    login_unix_socket: /var/run/mysqld/mysqld.sock
  notify:
    - Reset MySQL source
    - Reset MySQL replica

- name: Create a new user with name 'agama'
  community.mysql.mysql_user:
    name: "{{ mysql_user }}"
    password: "{{ mysql_password }}"
    host: "%"
    priv: "{{ mysql_database }}.*:ALL"
    login_unix_socket: /var/run/mysqld/mysqld.sock
  no_log: yes

- name: Create a new user with name 'replication'
  community.mysql.mysql_user:
    name: "{{ replication_user }}"
    password: "{{ replication_password }}"
    host: "%"
    priv: "*.*:REPLICATION SLAVE"
    login_unix_socket: /var/run/mysqld/mysqld.sock
  no_log: yes

- name: Install prometheus-mysqld-exporter
  ansible.builtin.apt:
    name: prometheus-mysqld-exporter
    state: present

- name: Configure my.cnf for prometheus node exporter
  ansible.builtin.template:
    src: my.cnf.j2
    dest: /var/lib/prometheus/.my.cnf
    owner: prometheus
    mode: 0600
  no_log: yes
  notify: Restart MySql Node Exporter

- name: Ensure that Mysql and it's exporter service are started and enabled
  ansible.builtin.systemd:
    name: "{{ item }}"
    state: started
    enabled: true
  loop:
    - mysql

- name: Create a new user with name 'exporter'
  community.mysql.mysql_user:
    name: "{{ exporter_user }}"
    password: "{{ exporter_password }}"
    priv: "*.*:PROCESS,REPLICATION CLIENT,SELECT"
    login_unix_socket: /var/run/mysqld/mysqld.sock
  no_log: yes

- name: Create a backup directory
  ansible.builtin.file:
    path: /home/backup/mysql
    state: directory
    owner: backup

- name: Add user named 'backup' to mysql
  community.mysql.mysql_user:
    name: "{{ backup_user }}"
    password: "{{ backup_user_password }}"
    priv: "{{ mysql_database }}.*:SELECT,LOCK TABLES"
    login_unix_socket: /var/run/mysqld/mysqld.sock
  no_log: yes

- name: Add my.cnf conf for user backup
  ansible.builtin.template:
    src: backup.my.cnf.j2
    dest: /home/backup/.my.cnf
    mode: "0600"
    owner: backup
  no_log: yes

- name: Turn on Read only on the slave node
  community.mysql.mysql_variables:
    variable: read_only
    value: "{{ 'OFF' if inventory_hostname == mysql_host else 'ON' }}"
    mode: persist
    login_unix_socket: /var/run/mysqld/mysqld.sock
  notify:
    - Reset MySQL source
    - Reset MySQL replica

- name: Add both Mysql CNAME records
  ansible.builtin.include_role:                                                       
    name: dns_record                                                                  
  vars:                                                                               
    dns_record: "mysql{{ inventory_hostname | replace('7uu13', '') }}" 

- name: Configure Cron for backups
  ansible.builtin.template:                                                            
    src: mysql_cron.j2                                                          
    dest: /etc/cron.d/mysql-backup                                                     
  no_log: true 

- name: Ensure that prometheus node exporter is running
  ansible.builtin.systemd:
    name: prometheus-mysqld-exporter
    state: started
    enabled: yes